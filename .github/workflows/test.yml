name: Test
on:
  push:
    branches: [ master, ft/security ]

jobs:
  test:
    name: Testing
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASS }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Setup Go environment
      uses: actions/setup-go@v3.2.1
      with:
        go-version: ^1.18
      id: go
      
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
    
    - name: Install golang-migrate for database migrations
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.2/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate /usr/bin/
        which migrate

    - name: Run migrations
      run:  migrate -path migrations -database ${{ secrets.DATABASE_URL }} -verbose up
      
    - name: Resolve dependencies
      run: go mod tidy

    - name: Starting Tests
      run: go test -v -cover ./...
      env:
        PORT: ${{ secrets.PORT }}
        GIN_MODE: debug
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        TOKEN_SECRET_KEY: ${{ secrets.TOKEN_SECRET_KEY }}
        ACCESS_TOKEN_DURATION:  ${{ secrets.ACCESS_TOKEN_DURATION }}
        MIGRATION_URL: ${{ secrets.MIGRATION_URL }}
