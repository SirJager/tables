// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0

package core_repo

import (
	"time"

	"github.com/google/uuid"
)

type CoreSession struct {
	// auto generated session id
	Sid uuid.UUID `json:"sid"`
	// required,numeric,shouldref=core_users.uid
	Uid int64 `json:"uid"`
	// required,ipaddress
	ClientIp string `json:"client_ip"`
	// required,user_agent
	UserAgent string `json:"user_agent"`
	// required,token,desc=refresh token
	RefreshToken string `json:"refresh_token"`
	// required,boolean,desc=refresh token blocked or not
	IsBlocked bool `json:"is_blocked"`
	// timstamp when the refresh token gets expired
	ExpiresAt time.Time `json:"expires_at"`
	// timestamp when the refresh token was created
	CreatedAt time.Time `json:"created_at"`
}

type CoreTable struct {
	Tid int64 `json:"tid"`
	// required,numeric,shouldref=core_users.uid
	Uid       int64  `json:"uid"`
	Tablename string `json:"tablename"`
	// required,jsonstring,desc=columns of the tables
	Columns   string    `json:"columns"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type CoreUser struct {
	// server-side auto generated id
	Uid int64 `json:"uid"`
	// required,max=255
	Email string `json:"email"`
	// required,alphanumeric,min=3,max=60
	Username string `json:"username"`
	// required,hashed
	Password string `json:"password"`
	// optional,max=255
	Fullname string `json:"fullname"`
	// optinal,default=false,desc=profile visible by others or not
	IsPublic bool `json:"is_public"`
	// optinal,default=false,desc=email is verified or not
	IsVerified bool `json:"is_verified"`
	// optinal,default=false,desc=profile is accessible or not
	IsBlocked bool `json:"is_blocked"`
	// server-side auto generated timestamp with time zone
	UpdatedAt time.Time `json:"updated_at"`
	// server-side auto generated timestamp with time zone
	CreatedAt time.Time `json:"created_at"`
}
